################################################################################
################################################################################
### Environment Structure
################################################################################
################################################################################
## Environment Sizing

director_instance_type:
  ec2: "t2.medium"
  azure: Standard_A2_V2
  osp: 2c2g30d

controller_instance_type:
  ec2: "t2.medium"
  azure: Standard_A2_V2
  osp: 2c2g30d

compute_instance_type:
  ec2: "t2.medium"
  azure: Standard_A2_V2
  osp: 2c2g30d

stf_instance_type:
  ec2: "t2.medium"
  azure: Standard_A2_V2
  osp: 2c2g30d

director_instance_image: rhel-8.1
controller_instance_image: rhel-8.1
compute_instance_image: rhel-8.1
stf_instance_image: rhel-8.1

controller_instance_count: 1
compute_instance_count: 2
stf_instance_count: 3


# Environment Instances
instances:
  - name: "director"
    count: 1
    unique: true
    public_dns: true
    dns_loadbalancer: false
    image: "{{ director_instance_image }}"
    flavor: "{{ director_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "undercloud_nodes"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    volumes:
      - name: '/dev/sda1'
        size: 20
    security_groups:
      - BastionSG

  - name: "controller"
    count: "{{ controller_instance_count }}"
    public_dns: false
    dns_loadbalancer: false
    image: "{{ controller_instance_image }}"
    flavor: "{{ controller_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "controller_nodes"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - DefaultSG

  - name: "compute"
    count: "{{ compute_instance_count }}"
    public_dns: false
    dns_loadbalancer: false
    image: "{{ compute_instance_image }}"
    flavor: "{{ compute_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "compute_nodes"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - DefaultSG

  - name: "stf"
    count: "{{ stf_instance_count }}"
    public_dns: false
    dns_loadbalancer: false
    image: "{{ stf_instance_image }}"
    flavor: "{{ stf_instance_type }}"
    tags:
      - key: "AnsibleGroup"
        value: "stf_nodes"
      - key: "ostype"
        value: "linux"
      - key: "instance_filter"
        value: "{{ env_type }}-{{ email }}"
    security_groups:
      - DefaultSG

# Stuff that only GPTE cares about:
install_ipa_client: false


################################################################################
################################################################################
### Common Host settings
################################################################################
################################################################################
# Other Options are: file, satellite and rhn
#If using repo_method: satellite, you must set these values as well.
# satellite_url: satellite.example.com
# satellite_org: Sat_org_name
# satellite_activationkey: "rhel7basic"

repo_method: file
repo_version: "3.10"
# Do you want to run a full yum update
update_packages: false
common_packages:
  - python
  - unzip
  - bash-completion
  - tmux
  - wget
  - git
  - vim-enhanced
  - at

rhel_repos:
  - rhel-8-for-x86_64-baseos-rpms
  - rhel-8-for-x86_64-appstream-rpms
  - rhel-8-for-x86_64-highavailability-rpms
  - ansible-2.8-for-rhel-8-x86_64-rpms
  - openstack-16-for-rhel-8-x86_64-rpms
  - fast-datapath-for-rhel-8-x86_64-rpm

###V2WORK, these should just be set as default listed in the documentation
install_bastion: true
install_common: true
## SB Don't set software_to_deploy from here, always use extra vars (-e) or "none" will be used
#software_to_deploy: none


## guid is the deployment unique identifier, it will be appended to all tags,
## files and anything that identifies this environment from another.
# Using GUID is required, if it is not passed in the command line or uncommented
# here the deployment will fail
#guid: defaultguid



###V2WORK, these should just be set as default listed in the documentation
# This is where the ssh_config file will be created, this file is used to
# define the communication method to all the hosts in the deployment
deploy_local_ssh_config_location: "{{output_dir}}/"


### If you want a Key Pair name created and injected into the hosts,
# set `set_env_authorized_key` to true and set the keyname in `env_authorized_key`
# you can use the key used to create the environment or use your own self generated key
# if you set "use_own_key" to false your PRIVATE key will be copied to the bastion. (This is {{key_name}})

###V2WORK, these should just be set as default listed in the documentation
use_own_key: true
env_authorized_key: "{{guid}}key"
set_env_authorized_key: true

###V2WORK THIS SHOULD MOVE INTO THE ROLE
# This var is used to identify stack (cloudformation, azure resourcegroup, ...)
project_tag: "{{ env_type }}-{{ guid }}"
